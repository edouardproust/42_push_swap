1. Push 2 first numbers to B

- If lstsize(A) == 4: push(B)
- if lstsize(A) >= 5 nbs: 2 * push(B)

2. While lstsize(A) > 3:

2A. Get target nodes

foreach(A) while cost != 0: calculate cost for pushing:
- A above the "just smaller B to A"
- A below the "highest B" (if there is no smaller B than A)

cost = (nb of ops to bring nb on top of A) + (nb of ops to bring a->target_node on top of B)

Condition "while cost != 0": if cost == 0, we cannot get better, so we stop searching / looping

